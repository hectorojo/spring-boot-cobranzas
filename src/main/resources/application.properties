	#database init, supports mysql too
database=mysql
spring.datasource.url=jdbc:mysql://localhost/petclinic
spring.datasource.username=root
spring.datasource.password=petclinic

# Web
spring.thymeleaf.mode=HTML

#facebook login

security.oauth2.client.clientId=1848531161934412
# prod: security.oauth2.client.clientId=1848531161934412
security.oauth2.client.clientSecret=18972eedfd440c8b611d088c93b48e3c
security.oauth2.client.scope=email
# prod: 12a1e11418093db18cf25031725cbe66
	
security.oauth2.client.accessTokenUri=https://graph.facebook.com/oauth/access_token
security.oauth2.client.userAuthorizationUri=https://www.facebook.com/dialog/oauth
security.oauth2.client.tokenName=oauth_token
security.oauth2.client.authenticationScheme=query
security.oauth2.client.clientAuthenticationScheme=form
security.oauth2.resource.userInfoUri=https://graph.facebook.com/me
# security.oauth2.resource.preferTokenInfo=false



#spring.cloud.gcp.sql.database-name=petclinic
#spring.cloud.gcp.sql.instance-connection-name=prueba-spring-boot-219518:us-central1:prueba-spring-boot
#spring.cloud.gcp.sql.password=petclinic


# Uncomment this the first time the app runs
spring.datasource.initialization-mode=always


#database=hsqldb
spring.datasource.schema=classpath*:db/${database}/schema.sql
spring.datasource.data=classpath*:db/${database}/data.sql

# In the last line, add mysql to the spring.profiles.active property
#management.contextPath=/_ah
spring.profiles.active=mysql
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.show-sql=true
